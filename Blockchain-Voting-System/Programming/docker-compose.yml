#############################################################
# Docker compose file for our webapp. Here we specify how
# to run all of our Docker containers.
#
# Example usage: 'docker-compose up'
#############################################################
version: '3'

networks:
    my_net:
        driver: bridge
        ipam:
            config:
                - subnet: 10.5.1.0/24

services:

    onlineballotregulator:
        build:
            # Where to look for the dockerfile to build the onlineballotregulator image.
            context: 4_OnlineBallotRegulator/
            dockerfile: Dockerfile
        ports:
            - "127.0.0.1:5434:5434"
        env_file:
            - 4_OnlineBallotRegulator/bin/Variables.env
        working_dir:
              /usr/src/onlineballotregulator/
        entrypoint:
              bin/docker_entrypoint
        volumes:
            # Create local volume so we dont have to download blockchain every time.
            - ./ethereumDB/:/usr/src/ethereumDB/
            - ./4_OnlineBallotRegulator/:/usr/src/onlineballotregulator/
        networks:
            my_net:
                ipv4_address: 10.5.1.5

    onlineaccountverifier:
        build:
            # Where to look for the dockerfile to build the onlineaccountverifier image.
            context: 3_OnlineAccountVerifier/
            dockerfile: Dockerfile
        ports:
            - "127.0.0.1:5435:5435"
        env_file:
            - 3_OnlineAccountVerifier/bin/Variables.env
        environment:
            - TWISTED_BALLOTREGULATOR_IP=10.5.1.5
        working_dir:
              /usr/src/onlineaccountverifier/
        entrypoint:
              [ "bin/wait-for-it.sh", "10.5.1.5:5434", "--", "bin/docker_entrypoint" ]
        volumes:
            # Create local volume so we dont have to download blockchain every time.
            - ./ethereumDB/:/usr/src/ethereumDB/
            - ./3_OnlineAccountVerifier/:/usr/src/onlineaccountverifier/
        depends_on:
            - onlineballotregulator
        networks:
            my_net:
                ipv4_address: 10.5.1.4

#    applicationserver:
#        build:
#            # Where to look for the dockerfile to build the applicaitonserver image.
#            context: 2_ApplicationServer/
#            dockerfile: Dockerfile
#        ports:
#            - "81:81"
#            - "127.0.0.1:5436:5436"
#        env_file:
#            - 2_ApplicationServer/bin/Variables.env
#        environment:
#            - TWISTED_BALLOTREGULATOR_IP=10.5.1.5
#            - TWISTED_ACCOUNTVERIFIER_IP=10.5.1.4
#        working_dir:
#              /usr/src/applicationserver/
#        entrypoint:
#              bin/wait-for-it.sh 10.5.1.5:5434 -- bin/wait-for-it.sh 10.5.1.4:5435 -- bin/docker_entrypoint
#        volumes:
#            # Create local volume so we dont have to download blockchain every time.
#            - ./ethereumDB/:/usr/src/ethereumDB/
#            - ./2_ApplicationServer/:/usr/src/applicationserver/
#            - /run/uwsgi/applicationserver:/run/uwsgi/applicationserver/
#        depends_on:
#            - onlineballotregulator
#            - onlineaccountverifier
#        networks:
#            my_net:
#                ipv4_address: 10.5.1.3
#
#    externalvoterregistration:
#        build:
#            # Where to look for the dockerfile to build the externalvoterregistration image.
#            context: 1_ExternalVoterRegistration/
#            dockerfile: Dockerfile
#        ports:
#            - "8080:8080"
#        env_file:
#            - 1_ExternalVoterRegistration/bin/Variables.env
#        environment:
#            - TWISTED_BALLOTREGULATOR_IP=10.5.1.5
#            - TWISTED_ACCOUNTVERIFIER_IP=10.5.1.4
#            - TWISTED_APPLICATIONSERVER_IP=10.5.1.3
#        working_dir:
#              /usr/src/externalvoterregistration/
#        entrypoint:
#              bin/wait-for-it.sh 10.5.1.5:5434 -- bin/wait-for-it.sh 10.5.1.4:5435 -- bin/wait-for-it.sh 10.5.1.3:5436 -- bin/docker_entrypoint
#        volumes:
#            # Create local volume so we dont have to download blockchain every time.
#            - ./ethereumDB/:/usr/src/ethereumDB/
#            - ./1_ExternalVoterRegistration/:/usr/src/externalvoterregistration/
#            - /run/uwsgi/externalvoterregistration:/run/uwsgi/externalvoterregistration/
#        depends_on:
#            - onlineaccountverifier
#            - onlineballotregulator
#            - applicationserver
#        networks:
#            my_net:
#                ipv4_address: 10.5.1.2
